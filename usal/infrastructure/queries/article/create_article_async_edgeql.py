# AUTOGENERATED FROM 'usal/infrastructure/queries/article/create_article.edgeql' WITH:
#     $ gel-py


from __future__ import annotations
import dataclasses
import enum
import gel
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


class ArticleStatus(enum.Enum):
    ACTIVE = "ACTIVE"
    INACTIVE = "INACTIVE"


class ArticleType(enum.Enum):
    NEWS = "NEWS"
    BLOG = "BLOG"


@dataclasses.dataclass
class CreateArticleResult(NoPydanticValidation):
    id: uuid.UUID


async def create_article(
    executor: gel.AsyncIOExecutor,
    *,
    title: str,
    cover_image: str,
    duration: str | None = None,
    media: list[str] | None = None,
    content: str,
    type: ArticleType,
    author: uuid.UUID,
    category: uuid.UUID,
    status: ArticleStatus,
) -> CreateArticleResult:
    return await executor.query_single(
        """\
        INSERT Article{
            title := <str>$title,
            cover_image:= <str>$cover_image,
            duration := <optional str>$duration,
            media := (
                IF EXISTS <optional array<str>>$media AND len(<optional array<str>>$media) > 0
                THEN array_unpack(<optional array<str>>$media) 
                ELSE {}
            ),
            content := <str>$content,
            type := <ArticleType>$type,
            author:=(
                SELECT Author
                FILTER .id = <uuid>$author
            ),
            category:=(
                SELECT ArticleCategory
                FILTER .id = <uuid>$category
            ),
            status := <ArticleStatus>$status,
        }\
        """,
        title=title,
        cover_image=cover_image,
        duration=duration,
        media=media,
        content=content,
        type=type,
        author=author,
        category=category,
        status=status,
    )
