# AUTOGENERATED FROM 'usal/infrastructure/queries/user/create_user.edgeql' WITH:
#     $ gel-py


from __future__ import annotations
import dataclasses
import gel
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema

        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass

        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class CreateUserResult(NoPydanticValidation):
    id: uuid.UUID
    full_name: str
    email: str
    phone_number: str
    password_hash: str
    verified: bool


async def create_user(
    executor: gel.AsyncIOExecutor,
    *,
    full_name: str,
    email: str,
    phone_number: str,
    password: str,
) -> CreateUserResult:
    return await executor.query_single(
        """\
        SELECT(INSERT User{
            full_name := <str>$full_name,
            email := <str>$email,
            phone_number := <str>$phone_number,
            password_hash := <str>$password,
        })
        {
            id,
            full_name,
            email,
            phone_number,
            password_hash,
            verified,
        }\
        """,
        full_name=full_name,
        email=email,
        phone_number=phone_number,
        password=password,
    )
