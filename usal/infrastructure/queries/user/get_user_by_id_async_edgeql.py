# AUTOGENERATED FROM 'usal/infrastructure/queries/user/get_user_by_id.edgeql' WITH:
#     $ gel-py


from __future__ import annotations
import dataclasses
import datetime
import enum
import gel
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


class Gender(enum.Enum):
    MALE = "MALE"
    FEMALE = "FEMALE"
    OTHERS = "OTHERS"


@dataclasses.dataclass
class GetUserByIdResult(NoPydanticValidation):
    id: uuid.UUID
    full_name: str
    email: str
    phone_number: str
    password_hash: str
    gender: Gender | None
    verified: bool
    pp_url: str | None
    date_of_birth: datetime.date | None


async def get_user_by_id(
    executor: gel.AsyncIOExecutor,
    *,
    user_id: uuid.UUID,
) -> GetUserByIdResult | None:
    return await executor.query_single(
        """\
        SELECT User{
            id,
            full_name,
            email,
            phone_number,
            password_hash,
            gender,
            verified,
            pp_url,
            date_of_birth,
        }
        FILTER .id = <uuid>$user_id
        LIMIT 1\
        """,
        user_id=user_id,
    )
