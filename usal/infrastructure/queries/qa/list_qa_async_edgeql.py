# AUTOGENERATED FROM 'usal/infrastructure/queries/qa/list_qa.edgeql' WITH:
#     $ gel-py


from __future__ import annotations
import dataclasses
import enum
import gel
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class ListQaResult(NoPydanticValidation):
    id: uuid.UUID
    question: str
    answer: str


class QAType(enum.Enum):
    UNIVERSITY = "UNIVERSITY"
    ACADEMIC = "ACADEMIC"
    FINANCIAL = "FINANCIAL"
    PERSONAL = "PERSONAL"
    GRADUATE = "GRADUATE"
    POST_GRADUATE = "POST_GRADUATE"
    PHD = "PHD"
    FAMILY = "FAMILY"


async def list_qa(
    executor: gel.AsyncIOExecutor,
    *,
    type: QAType,
) -> list[ListQaResult]:
    return await executor.query(
        """\
        SELECT QASection {
            id,
            question,
            answer,
        }
        FILTER .type = <QAType>$type\
        """,
        type=type,
    )
